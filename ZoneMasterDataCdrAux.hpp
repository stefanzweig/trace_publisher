// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ZoneMasterDataCdrAux.hpp
 * This source file contains some definitions of CDR related functions.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_ZONEMASTERDATACDRAUX_HPP_
#define _FAST_DDS_GENERATED_ZONEMASTERDATACDRAUX_HPP_

#include "ZoneMasterData.h"

constexpr uint32_t canMessages_max_cdr_typesize {16021UL};
constexpr uint32_t canMessages_max_key_cdr_typesize {0UL};

constexpr uint32_t linMessage_max_cdr_typesize {252UL};
constexpr uint32_t linMessage_max_key_cdr_typesize {0UL};

constexpr uint32_t canframe_max_cdr_typesize {10822048UL};
constexpr uint32_t canframe_max_key_cdr_typesize {0UL};

constexpr uint32_t ethFrame_max_cdr_typesize {152UL};
constexpr uint32_t ethFrame_max_key_cdr_typesize {0UL};

constexpr uint32_t someipStateInfo_max_cdr_typesize {28UL};
constexpr uint32_t someipStateInfo_max_key_cdr_typesize {0UL};

constexpr uint32_t canpdu_max_cdr_typesize {53980UL};
constexpr uint32_t canpdu_max_key_cdr_typesize {0UL};

constexpr uint32_t linMessages_max_cdr_typesize {24828UL};
constexpr uint32_t linMessages_max_key_cdr_typesize {0UL};

constexpr uint32_t canMessage_max_cdr_typesize {157UL};
constexpr uint32_t canMessage_max_key_cdr_typesize {0UL};

constexpr uint32_t linFrame_max_cdr_typesize {79620UL};
constexpr uint32_t linFrame_max_key_cdr_typesize {0UL};

constexpr uint32_t cansignal_max_cdr_typesize {532UL};
constexpr uint32_t cansignal_max_key_cdr_typesize {0UL};

constexpr uint32_t doipMessage_max_cdr_typesize {116UL};
constexpr uint32_t doipMessage_max_key_cdr_typesize {0UL};

constexpr uint32_t linFrames_max_cdr_typesize {7961628UL};
constexpr uint32_t linFrames_max_key_cdr_typesize {0UL};

constexpr uint32_t someipFrame_max_cdr_typesize {2504UL};
constexpr uint32_t someipFrame_max_key_cdr_typesize {0UL};

constexpr uint32_t linSignal_max_cdr_typesize {792UL};
constexpr uint32_t linSignal_max_key_cdr_typesize {0UL};

constexpr uint32_t sdFrame_max_cdr_typesize {1428UL};
constexpr uint32_t sdFrame_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const cansignal& data);





eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const canpdu& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const canframe& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const canMessage& data);





eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const canMessages& data);





eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const doipMessage& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ethFrame& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const linSignal& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const linFrame& data);





eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const linFrames& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const linMessage& data);





eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const linMessages& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const someipFrame& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const sdFrame& data);



eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const someipStateInfo& data);


} // namespace fastcdr
} // namespace eprosima

#endif // _FAST_DDS_GENERATED_ZONEMASTERDATACDRAUX_HPP_

